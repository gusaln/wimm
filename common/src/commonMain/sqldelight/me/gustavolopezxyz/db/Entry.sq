selectEntries:
SELECT
    entry.*,
    moneyTransaction.description AS transactionDescription,
    account.name AS accountName,
    account.currency AS currency
FROM entry
JOIN account USING (accountId)
JOIN moneyTransaction USING (transactionId)
ORDER BY incurredAt DESC
LIMIT :offset, :limit;

selectEntriesFromTransaction:
SELECT
    entry.*,
    account.name AS accountName,
    account.currency AS currency
FROM entry
JOIN account USING (accountId)
WHERE transactionId = :transactionId;

insertEntry {
    INSERT INTO entry(accountId, transactionId, amount, incurredAt, recordedAt)
    VALUES (:accountId, :transactionId, :amount, :incurredAt, :recordedAt);

    UPDATE account
    SET balance = balance + :amount
    WHERE accountId = :accountId;
}

updateEntry {
    UPDATE entry
    SET
        amount = amount + :amountDelta,
        incurredAt = :incurredAt,
        recordedAt = :recordedAt
    WHERE entryId = :entryId;

    UPDATE account
    SET balance = balance + :amountDelta
    WHERE accountId = :accountId;
}

updateAndMoveEntry {
    UPDATE entry
        SET
            amount = amount + :amountDelta,
            incurredAt = :incurredAt,
            recordedAt = :recordedAt
        WHERE entryId = :entryId;

    UPDATE account
    SET balance = balance + :amountDelta
    WHERE accountId = :accountId;

    UPDATE account
    SET balance = balance - :originalAmount
    WHERE accountId = :originalAccountId;
}

deleteEntry {
    DELETE FROM entry WHERE entryId = :entryId;

    UPDATE account
    SET balance = balance + :amount
    WHERE accountId = :accountId;
}