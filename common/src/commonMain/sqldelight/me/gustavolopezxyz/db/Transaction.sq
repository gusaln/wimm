selectTransactions:
SELECT * FROM moneyTransaction
ORDER BY incurredAt DESC, transactionId DESC
LIMIT :offset, :limit;

selectTransactionsInRange:
SELECT * FROM moneyTransaction
WHERE
    (incurredAt >= :after AND incurredAt <= :before)
ORDER BY incurredAt DESC, transactionId DESC;

selectTransactionsInCategory:
SELECT moneyTransaction.*
FROM
    moneyTransaction
    JOIN category ON moneyTransaction.categoryId = category.categoryId
WHERE
    moneyTransaction.categoryId = :categoryId OR category.parentCategoryId = :categoryId
ORDER BY incurredAt DESC, transactionId
LIMIT :offset, :limit;

selectById:
SELECT * FROM moneyTransaction WHERE transactionId = :transactionId;

selectByNumber:
SELECT * FROM moneyTransaction WHERE number = :number;

insertTransaction:
INSERT INTO moneyTransaction(number, categoryId, incurredAt, description, details, total )
VALUES (:number, :categoryId, :incurredAt, :description, :details, :total);

updateTransaction:
UPDATE moneyTransaction
SET categoryId = :categoryId, description = :description, details = :details, total = :total, incurredAt = :incurredAt
WHERE transactionId = :transactionId;

deleteTransaction {
    DELETE FROM entry WHERE transactionId = :transactionId;
    DELETE FROM moneyTransaction WHERE transactionId = :transactionId;
}