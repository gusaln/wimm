import kotlin.Boolean;
import kotlinx.datetime.Instant;
import me.gustavolopezxyz.common.data.AccountType;

CREATE TABLE account (
    accountId INTEGER PRIMARY KEY,
    type TEXT AS AccountType NOT NULL,
    name TEXT NOT NULL,
    currency TEXT NOT NULL,
    balance REAL NOT NULL DEFAULT 0
);

CREATE TABLE category (
    categoryId INTEGER PRIMARY KEY,
    parentCategoryId INTEGER,
    name TEXT NOT NULL UNIQUE,
    isLocked INTEGER AS Boolean NOT NULL DEFAULT 0
);

INSERT INTO category
    (parentCategoryId, name, isLocked)
VALUES
    (NULL, "cash", 1),
    (NULL, "asset", 1),
    (NULL, "income", 1),
    (NULL, "expense", 1),
    (NULL, "receivable", 1),
    (NULL, "payable", 1)
;

CREATE TABLE moneyTransaction (
    transactionId INTEGER PRIMARY KEY,
    categoryId INTEGER NOT NULL,
    number INTEGER NOT NULL UNIQUE,
    description TEXT NOT NULL,

    FOREIGN KEY (categoryId)
        REFERENCES category (categoryId)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

CREATE TABLE entry (
    entryId INTEGER PRIMARY KEY,
    transactionId INTEGER NOT NULL,
    accountId INTEGER NOT NULL,
    amount REAL NOT NULL DEFAULT 0,
    incurredAt INTEGER AS Instant NOT NULL,
    recordedAt INTEGER AS Instant NOT NULL,

    FOREIGN KEY (transactionId)
        REFERENCES moneyTransaction (transactionId)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    FOREIGN KEY (accountId)
        REFERENCES account (accountId)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS migration (
    migrationId INTEGER PRIMARY KEY,
    datetime INTEGER NOT NULL
);

INSERT INTO migration (migrationId, datetime) VALUES (1, strftime('%s', 'now'));